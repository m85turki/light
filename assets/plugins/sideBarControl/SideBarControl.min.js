var IsAllChecked = !1,
    selectedTrans = [],
    selectedEncryptedTrans = [];

function updateSelectedList(e, t) {
    var l = parseInt(e);
    index = selectedTrans.indexOf(l), -1 < index ? (selectedTrans.splice(index, 1), selectedEncryptedTrans.splice(index, 1)) : (selectedTrans.push(l), selectedEncryptedTrans.push(t));
    var c = selectedTrans.join(","),
        s = selectedEncryptedTrans.join(",");
 if (c.includes(",")) {
$('#divPrintAssignment').attr("style", "display: none !important");
        }
else
{
$('#divPrintAssignment').attr("style", "display: inline !important");
}
    $("#transactionsIds").val(c), $("#encryptedTransactionsIds").val(s)
}

function getSelectedListLength() {
    return selectedTrans.length
}

function holdDataFromBox(e) {
    0 < $(".boxes input:checked").length && (toggleSidebar("open"), fillList($(e).parents(".box-grid").attr("data-id"))), $(e).is(":checked") || (unfillList($(e).parents(".box-grid").attr("data-id")), $("#CheckAllBoxes").prop("checked", !1), IsAllChecked = !1), $(".boxes input:checkbox:checked").length == $(".boxes input:checkbox").length && ($("#CheckAllBoxes").prop("checked", !0), IsAllChecked = !0), updateSelectedList($(e).data("id"), $(e).data("encryptedid")), 0 < !selectedTrans.length ? toggleSidebar("close") : $(".paper_count").text(getSelectedListLength() + "")
}

function doCheckAll() {
    var e = [],
        t = [];
    $(".boxes input:checkbox:checked").each(function () {
        e.push($(this).data("id")), t.push($(this).data("encryptedid"))
    }), IsAllChecked ? ($(".boxes input:checkbox").prop("checked", !1), $("#CheckAllBoxes").prop("checked", !1), unfillAll(e, t), "" == $("#transactionsIds").val() && toggleSidebar("close"), IsAllChecked = !1, $(".paper_count").text(getSelectedListLength() + "")) : ($(".boxes input:checkbox").prop("checked", !0), unfillAll(e, t), e = [], t = [], $(".boxes input:checkbox").each(function () {
        e.push($(this).data("id")), t.push($(this).data("encryptedid"))
    }), fillAll(e, t), toggleSidebar("open"), IsAllChecked = !0)
}

var chkArray = [];
var selected;

function FillStatus() {   
        chkArray = [];
        $(".FillIds:checked").each(function () {
            chkArray.push(($(this).data("status")));
        });
        selected = '';
        selected = chkArray.join(',');
    if (selected.includes("762")) {
            $("#divView").hide();
            $("#divDelete").show();
        }
        else {
            $("#divView").show();
            $("#divDelete").show();
        }
}

function EnablePrint(e) {
    chkArray.push(e);
    selected = chkArray.join(',');
    if (selected.includes(",")) {
        //$('#divPrintAssignment').attr("style", "display: none !important");
    }
    else {
       // $('#divPrintAssignment').attr("style", "display: inline !important");
    }
}

function CheckCopyStatus(e) {
    
    chkArray.push(e);
    selected = chkArray.join(',');
    if (selected.includes("762")) {
        $("#divView").hide();
        $("#divDelete").show();
    }
    else {
        $("#divView").show();
        $("#divDelete").show();
    }
}

function toggleSidebar(e) {
    if (0 < $(".sidebarMultiOptions").length) {
        var t = selectedTrans.length;
        "close" == e ? ($(".paper_count").text(t), $(".sidebarMultiOptions:not(.invisible)").addClass("invisible")) : ($(".paper_count").text(t), $(".sidebarMultiOptions").removeClass("invisible"))
    }
}

function fillAll(e, t) {
    for (var l = 0; l < e.length; l++) fillList(e[l]), updateSelectedList(e[l], t[l])
}

function unfillAll(e, t) {
    for (var l = 0; l < e.length; l++) unfillList(e[l]), updateSelectedList(e[l], t[l])
}

function fillList(e) {
    $("ul.papers-selected").append('<li><a class="removeSideBarBox" data-id="' + e + '" ><i class="uicon icon_close"></i></a><span class="paper-name">' + $("#entityName_" + e).text() + '</span><span class="paper-number">' + $("#Number_" + e).text() + "</span></li>")
}

function unfillList(e) {
    $("ul.papers-selected li a.removeSideBarBox[data-id=" + e + "]").parent("li").remove()
}

function toggleCheckPaperBox() {
    $(".selected-papers-wrapper").slideToggle(160), $(".info-bottom .close-box").toggleClass("transform")
}
$(document).ready(function () {
    
    $(".checkbox #CheckAllBoxes").on("change", function () {
        doCheckAll();
        FillStatus();
    })
}), $(document).on("click", ".papers-selected li >a.removeSideBarBox", function () {
    
    $(this).parents("li").remove(), $("div[data-id=" + $(this).attr("data-id") + "]").find("input:checkbox").prop("checked", !1), $("#CheckAllBoxes").prop("checked", !1), updateSelectedList($(this).attr("data-id"), $(this).attr("data-encryptedid"));
    var e = getSelectedListLength();
    $(".paper_count").text(e), IsAllChecked = !1, 0 == $(".papers-selected li").length && (toggleCheckPaperBox(), toggleSidebar("close"))
});